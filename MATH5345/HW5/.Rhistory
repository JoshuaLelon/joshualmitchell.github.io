setwd("/Users/jm/joshualmitchell.github.io/pokecars")
autodata <- read.table("raw_auto-mpg.text", header=TRUE)
pokedata <- read.csv("raw_pokemon.csv", header=TRUE)
colnames(autodata) <- c("mpg_c", "cylnum_mvd", "displ_c", "hp_c", "wgt_c", "acc_c", "modelyr_mvd", "origin_mvd", "name_str")
colnames(pokedata) <- c("pokemon_num_mvd", "name_str", "type_1_str", "type_2_str", "total_c", "hp_c", "attack_c", "defense_c", "sp_attack_c", "sp_defense_c", "speed_c", "generation_mvd", "legendary_bool")
setwd("/Users/jm/joshualmitchell.github.io/pokecars")
autodata <- read.table("raw_auto-mpg.text", header=TRUE)
pokedata <- read.csv("raw_pokemon.csv", header=TRUE)
colnames(autodata) <- c("mpg_c", "cylnum_mvd", "displ_c", "hp_c", "wgt_c", "acc_c", "modelyr_mvd", "origin_mvd", "name_str")
colnames(pokedata) <- c("pokemon_num_mvd", "name_str", "type_1_str", "type_2_str", "total_c", "hp_c", "attack_c", "defense_c", "sp_attack_c", "sp_defense_c", "speed_c", "generation_mvd", "legendary_bool")
dim(autodata)
summary(autodata)
hist(autodata)
str(autodata)
autodata_formatted <- subset(autodata, !autodata[ , 4] == "?")
hist(autodata_formatted$hp_c)
pokedata_without_duplicates <- pokedata[!duplicated(pokedata$pokemon_num_mvd),]
percentage <- (nrow(pokedata_without_duplicates)/nrow(pokedata))*100
percentage
summary(autodata)
hist(autodata$mpg_c, xlab="Miles per gallon", ylab="Number of cars with x miles per galon")
barplot(table(autodata$cylnum_mvd), main="Occurrences of cars with x cylinders",
xlab="Number of Cylinders", ylab="Frequency")
hist(autodata$displ_c, main="Occurrences of cars with x displacement",
xlab="Displacement Amount", ylab="Frequency")
hist(autodata$hp_c)
autodata_formatted$hp_c <- as.numeric(as.character(autodata_formatted$hp_c))
str(autodata_formatted$hp_c)
hist(autodata_formatted$hp_c)
str(autodata_formatted)
setwd("/Users/jm/joshualmitchell.github.io/pokecars")
autodata <- read.table("raw_auto-mpg.text", header=TRUE)
pokedata <- read.csv("raw_pokemon.csv", header=TRUE)
colnames(autodata) <- c("mpg_c", "cylnum_mvd", "displ_c", "hp_c", "wgt_c", "acc_c", "modelyr_mvd", "origin_mvd", "name_str")
colnames(pokedata) <- c("pokemon_num_mvd", "name_str", "type_1_str", "type_2_str", "total_c", "hp_c", "attack_c", "defense_c", "sp_attack_c", "sp_defense_c", "speed_c", "generation_mvd", "legendary_bool")
dim(autodata)
summary(autodata)
autodata_formatted <- subset(autodata, !autodata[ , 4] == "?")
hist(autodata_formatted$mpg_c, xlab="Miles per gallon", ylab="Number of cars with x miles per galon")
barplot(table(autodata_formatted$cylnum_mvd), main="Occurrences of cars with x cylinders",
xlab="Number of Cylinders", ylab="Frequency")
hist(autodata_formatted$displ_c, main="Occurrences of cars with x displacement",
xlab="Displacement Amount", ylab="Frequency")
head(pokedata)
autodata
autodata$hp_c
dim(autodata$hp_c)
dim(autodata)
y <- rnorm(10)
y
y <- c(NA, y, NA)
y
x <- rnorm(12)
lm(y ~ x)
summary(lm)
summary(lm(y ~ x))
lm1 <- lm(y ~ x)
anova(lm1)
y <- c(?, y, ?)
y <- c("?", y, "?")
lm1 <- lm(y ~ x)
setwd("/Users/jm/joshualmitchell.github.io/pokecars")
autodata <- read.table("raw_auto-mpg.text", header=TRUE)
pokedata <- read.csv("raw_pokemon.csv", header=TRUE)
colnames(autodata) <- c("mpg_c", "cylnum_mvd", "displ_c", "hp_c", "wgt_c", "acc_c", "modelyr_mvd", "origin_mvd", "name_str")
colnames(pokedata) <- c("pokemon_num_mvd", "name_str", "type_1_str", "type_2_str", "total_c", "hp_c", "attack_c", "defense_c", "sp_attack_c", "sp_defense_c", "speed_c", "generation_mvd", "legendary_bool")
# Step 1: Explore and check your data
# -- Using R functions: dim, summary, hist, plot, boxplot, table (for categorical variables)
# -- to check the dimension, distribution, potential outliers for data (y, x1, x2...)
# -- consider removing incorrect or "weird" data points (but be VERY careful)
dim(autodata)
summary(autodata)
str(autodata)
autodata$hp_c <- gsub("?",NA, autodata$hp_c, fixed = TRUE)
hist(autodata$hp_c)
autodata$hp_c
table(autodata$hp_c)
boxplot(autodata$hp_c)
hist(autodata$hp_c)
autodata$hp_c
hist(as.numeric(autodata_formatted$hp_c), xlab="Miles per gallon", ylab="Number of cars with x miles per galon")
install.packages("leaps")
library(leaps)
?regsubsets.
nfl_data <- read.table("HW5NFL.txt", header=T)
dim(nfl_data)
dim(nfl_data)
# install.packages("leaps")
# library(leaps)
# ?regsubsets. # No documentation for ‘regsubsets.’ in specified packages and libraries
setwd("/Users/jm/joshualmitchell.github.io/MATH5345/HW5/")
nfl_data <- read.table("HW5NFL.txt", header=T)
dim(nfl_data)
nfl_data
regsub.exhaust<-regsubsets( y ~ x1 + x2 +x3 +x4, data = nfl_data, nbest = 1, nvmax = NULL,force.in = NULL, force.out = NULL, intercept=TRUE, method = "exhaustive")
regsub.exhaust
regsub.exhaust.out <- summary(regsub.exhaust)
regsub.exhaust.out
regsub.exhaust.out$adjr2
regsub.exhaust.out$rss
regsub.exhaust.out$cp
regsub.exhaust.out$outmat
regsub.exhaust<-regsubsets( y ~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9, data = nfl_data, nbest = 1, nvmax = NULL,force.in = NULL, force.out = NULL, intercept=TRUE, method = "exhaustive")
regsub.exhaust
regsub.exhaust.out <- summary(regsub.exhaust)
regsub.exhaust.out
regsub.exhaust.out$adjr2
regsub.exhaust.out$rss
regsub.exhaust.out$cp
regsub.exhaust.out$outmat
regsub.forward <- regsubsets(y ~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9, data = nfl_data, nbest = 1, nvmax = NULL, force.in = NULL, force.out = NULL, intercept=TRUE, method = "forward")
summary(regsub.forward)
regsub.backward<-regsubsets(y ~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9, data = nfl_data, nbest = 1, nvmax = NULL, force.in = NULL, force.out = NULL, intercept=TRUE, method = "backward")
summary(regsub.backward)
full<-lm(y ~ ., data = nfl_data) # Fit a FULL linear model with all variables in the data.
null<-lm(y ~ 1, data = nfl_data) # Fit a NULL model with just intercept.
summary(full)
anova(full)
summary(null)
anova(null)
forw <- step(null, scope=list(lower=null, upper=full), direction="forward") # Perform "backward" selection starting from the NULL model and set up the scope to have an upper = FULL model.
back <- step(full, data= nfl_data, direction="backward") # Perform "step-wise" selection starting from the NULL model and set up the scope to have an upper = FULL model.
stepwise<- step(null, scope = list(upper=full), data=nfl_data, direction="both")
summary(forw)
summary(back)
summary(stepwise)
summary(full)
summary(null)
forw <- step(null, scope=list(lower=null, upper=full), direction="forward")
back <- step(full, data= nfl_data, direction="backward")
stepwise<- step(null, scope = list(upper=full), data=nfl_data, direction="both")
summary(forw)
summary(back)
summary(stepwise)
anova(forw)
anova(back)
anova(stepwise)
setwd("/Users/jm/joshualmitchell.github.io/MATH5345/HW5/")
nfl_data <- read.table("HW5NFL.txt", header=T)
regsub.exhaust<-regsubsets(y ~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9, data = nfl_data, nbest = 1, nvmax = NULL,force.in = NULL, force.out = NULL, intercept=TRUE, method = "exhaustive")
regsub.exhaust
regsub.exhaust.out <- summary(regsub.exhaust)
regsub.exhaust.out
regsub.exhaust.out$adjr2
regsub.exhaust.out$rss
regsub.exhaust.out$cp
regsub.exhaust.out$outmat
regsub.forward <- regsubsets(y ~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9, data = nfl_data, nbest = 1, nvmax = NULL, force.in = NULL, force.out = NULL, intercept=TRUE, method = "forward")
summary(regsub.forward)
regsub.backward<-regsubsets(y ~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9, data = nfl_data, nbest = 1, nvmax = NULL, force.in = NULL, force.out = NULL, intercept=TRUE, method = "backward")
summary(regsub.backward)
full<-lm(y ~ ., data = nfl_data) # Fit a FULL linear model with all variables in the data.
null<-lm(y ~ 1, data = nfl_data) # Fit a NULL model with just intercept.
summary(full)
anova(full)
summary(null)
anova(null)
forw <- step(null, scope=list(lower=null, upper=full), direction="forward") # Perform "backward" selection starting from the NULL model and set up the scope to have an upper = FULL model.
back <- step(full, data= nfl_data, direction="backward") # Perform "step-wise" selection starting from the NULL model and set up the scope to have an upper = FULL model.
stepwise<- step(null, scope = list(upper=full), data=nfl_data, direction="both")
forw <- step(null, scope=list(lower=null, upper=full), direction="forward")
back <- step(full, data= nfl_data, direction="backward")
stepwise<- step(null, scope = list(upper=full), data=nfl_data, direction="both")
summary(forw)
summary(back)
summary(stepwise)
anova(forw)
anova(back)
anova(stepwise)
forw <- step(null, scope=list(lower=null, upper=full), direction="forward")
back <- step(full, data= nfl_data, direction="backward")
stepwise<- step(null, scope = list(upper=full), data=nfl_data, direction="both")
summary(forw)
summary(back)
summary(stepwise)
forw <- step(null, scope=list(lower=null, upper=full), direction="forward")
forw.lm <- lm(y ~ x8 + x2 + x7 + x9, data = nfl_data)
back <- step(full, data= nfl_data, direction="backward")
back.lm <- lm(y ~ x2 + x7 + x8 + x9, data = nfl_data)
stepwise<- step(null, scope = list(upper=full), data=nfl_data, direction="both")
stepwise.lm <- lm(y ~ x8 + x2 + x7 + x9, data = nfl_data)
summary(stepwise.lm)
summary(back.lm)
regsub.exhaust<-regsubsets(y ~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9, data = nfl_data, nbest = 1, nvmax = NULL,force.in = NULL, force.out = NULL, intercept=TRUE, method = "exhaustive")
regsub.exhaust<-regsubsets(y ~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9, data = nfl_data, nbest = 1, nvmax = NULL,force.in = NULL, force.out = NULL, intercept=TRUE, method = "exhaustive")
regsub.exhaust<-regsubsets(y ~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9, data = nfl_data, nbest = 1, nvmax = NULL,force.in = NULL, force.out = NULL, intercept=TRUE, method = "exhaustive")
regsub.exhaust
summary.out <- summary(regsub.exhaust)
summary.out
summary.out$adjr2
as.data.frame(summary.out$outmat)
summary.out$rss
summary.out$cp
summary.out$outmat
plot(regsub.exhaust, scale="adjr2", main="Adjusted R^2")
library(car)
install.packages("car")
library(car)
layout(matrix(1:2, ncol=2))
legend <- subsets(summary.out, statistic="adjr2", legend=FALSE, min.size=10, main="Adjusted R^2")
legend <- subsets(regsub.exhaust, statistic="adjr2", legend=FALSE, min.size=10, main="Adjusted R^2")
legend <- subsets(regsub.exhaust, statistic="adjr2", legend=FALSE, min.size=1, main="Adjusted R^2")
legend <- subsets(regsub.exhaust, statistic="cp", legend=FALSE, min.size=5, main="Mallow Cp")
abline(a=1, b=1, lty=2)
which.max(summary.out$adjr2)
summary.out$which[4,]
best.model <- lm(y ~ x2 + x7 + x8 + x9, data=nfl_data)
summary(best.model)
regsub.exhaust<-regsubsets(y ~ x1 + x2 + x4 + x7 + x8 + x9, data = nfl_data, nbest = 1, nvmax = NULL,force.in = NULL, force.out = NULL, intercept=TRUE, method = "exhaustive")
regsub.exhaust
summary.out <- summary(regsub.exhaust)
summary.out
as.data.frame(summary.out$outmat)
summary.out$rss
summary.out$cp
summary.out$adjr2
summary.out$outmat
plot(regsub.exhaust, scale="adjr2", main="Adjusted R^2")
layout(matrix(1:2, ncol=2))
legend <- subsets(regsub.exhaust, statistic="adjr2", legend=FALSE, min.size=5, main="Adjusted R^2")
legend <- subsets(regsub.exhaust, statistic="cp", legend=FALSE, min.size=5, main="Mallow Cp")
abline(a=1, b=1, lty=2)
which.max(summary.out$adjr2) # The model with 4 regressors.
summary.out$which[4,] # Intercept, x2, x7, x8, and x9 specifically.
best.model <- lm(y ~ x2 + x7 + x8 + x9, data=nfl_data)
summary(best.model)
regsub.forward <- regsubsets(y ~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9, data = nfl_data, nbest = 1, nvmax = NULL, force.in = NULL, force.out = NULL, intercept=TRUE, method = "forward")
summary(regsub.forward)
regsub.backward<-regsubsets(y ~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9, data = nfl_data, nbest = 1, nvmax = NULL, force.in = NULL, force.out = NULL, intercept=TRUE, method = "backward")
summary(regsub.backward)
regsub.exhaust<-regsubsets(y ~ x1 + x2 + x4 + x7 + x8 + x9, data = nfl_data, nbest = 1, nvmax = NULL,force.in = NULL, force.out = NULL, intercept=TRUE, method = "exhaustive")
regsub.exhaust
summary.out <- summary(regsub.exhaust)
summary.out
as.data.frame(summary.out$outmat)
summary.out$rss
summary.out$cp
summary.out$adjr2
summary.out$outmat
summary.out$r2
summary.out$rsq
summary.out$rss
summary.out$cp
summary.out$adjr2
summary.out$rsq
which.max(summary.out$rss) # The model with 4 regressors.
which.max(summary.out$cp) # The model with 4 regressors.
which.max(summary.out$adjr2) # The model with 4 regressors.
which.max(summary.out$rsq) # The model with 4 regressors.
summary.out$which[4,] # Intercept, x2, x7, x8, and x9 specifically.
summary.out$which[1,] # Intercept
which.max(summary.out$rss) # The model with 4 regressors.
summary.out$which[1,] # Intercept + x8
which.max(summary.out$cp) # The model with 4 regressors.
which.max(summary.out$adjr2) # The model with 4 regressors.
which.max(summary.out$rss) # The model with 4 regressors.
summary.out$which[1,] # Intercept + x8
which.max(summary.out$cp) # The model with 4 regressors.
summary.out$which[1,] # Intercept + x8
which.max(summary.out$adjr2) # The model with 4 regressors.
summary.out$which[4,] # Intercept + x2 + x7 + x8 + + x9
which.max(summary.out$rsq) # The model with 4 regressors.
summary.out$which[6,] # Intercept + x2 + x7 + x8 + + x9
which.max(summary.out$rss) # The model with 1 regressor.
summary.out$which[1,] # Intercept + x8
min_rss.lm <- lm(y ~ x8, data = nfl_data)
which.max(summary.out$cp)  # The model with 1 regressor.
summary.out$which[1,] # Intercept + x8
cp_approx_eq_p.lm <- lm(y ~ x8, data = nfl_data)
which.max(summary.out$adjr2) # The model with 4 regressors.
summary.out$which[4,] # Intercept + x2 + x7 + x8 + + x9
max_adjr2.lm <- lm(y ~ x2 + x7 + x8 + + x9, data = nfl_data)
which.max(summary.out$rsq) # The model with 6 regressors.
summary.out$which[6,] # Intercept + x1 + x2 + x4 + x7 + x8 + + x9
max_r2.lm <- lm(y ~ x1 + x2 + x4 + x7 + x8 + + x9, data = nfl_data)
regsub.exhaust<-regsubsets(y ~ x1 + x2 + x4 + x7 + x8 + x9, data = nfl_data, nbest = 1, nvmax = NULL,force.in = NULL, force.out = NULL, intercept=TRUE, method = "exhaustive")
regsub.exhaust
setwd("/Users/jm/joshualmitchell.github.io/MATH5345/HW5/")
nfl_data <- read.table("HW5NFL.txt", header=T)
regsub.exhaust<-regsubsets(y ~ x1 + x2 + x4 + x7 + x8 + x9, data = nfl_data, nbest = 1, nvmax = NULL,force.in = NULL, force.out = NULL, intercept=TRUE, method = "exhaustive")
summary.out <- summary(regsub.exhaust)
which.max(summary.out$rss) # The model with 1 regressor.
summary.out$which[1,] # Intercept + x8
min_rss.lm <- lm(y ~ x8, data = nfl_data)
summary(min_rss.lm)
anova(min_rss.lm)
hi
hi
hi
which.max(summary.out$adjr2) # The model with 4 regressors.
summary.out$which[4,] # Intercept + x2 + x7 + x8 + + x9
max_adjr2.lm <- lm(y ~ x2 + x7 + x8 + + x9, data = nfl_data)
summary(max_adjr2.lm)
anova(max_adjr2.lm)
hi
hi
hi
hi
sssss
which.max(summary.out$rsq) # The model with 6 regressors.
summary.out$which[6,] # Intercept + x1 + x2 + x4 + x7 + x8 + + x9
max_r2.lm <- lm(y ~ x1 + x2 + x4 + x7 + x8 + + x9, data = nfl_data)
summary(max_r2.lm)
anova(max_r2.lm)
summary.out
which.min(summary.out$rss) # The model with 1 regressor.
summary.out$rss # [1] 148.87197  83.93820  69.87000  65.00435  63.13983  61.94123
summary.out$cp # [1] 26.472221  6.457655  3.688101  4.038492  5.406361  7.000000
summary.out$adjr2 # [1] 0.5271722 0.7227426 0.7595953 0.7666123 0.7630023 0.7564299
summary.out$rsq # [1] 0.5446843 0.7432802 0.7863069 0.8011882 0.8068908 0.8105566
