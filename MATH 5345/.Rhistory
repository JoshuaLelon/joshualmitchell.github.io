ls
setwd("/Users/jm/Downloads")
prop<-read.table("propdata.txt", header=T)
prop
x = mtcars$wt
y = mtcars$drat
# prepare plot, fit model, get predictions
# add lines for confidence limits ad regression line, add points
plot(y~x, type="n")
m = lm(y~x)
wx = par("usr")[1:2]
# This is just to get two numbers to generate new "X" observations.
new.x = seq(wx[1], wx[2], len=100)
pred = predict(m, new=data.frame(x = new.x), interval="conf")
# This "pred" is a matrix with 3 columns: fit, lwr (lower), upr (upper)
lines(new.x, pred[, "fit"], lwd=2)
lines(new.x, pred[, "lwr"], lty=3)
lines(new.x, pred[, "upr"], lty=3)
points(x, y, pch=16, col="steelblue")
setwd("/Users/jm/Downloads")
prop<-read.table("propdata.txt", header=T)
prop
x = mtcars$wt
y = mtcars$drat
# prepare plot, fit model, get predictions
# add lines for confidence limits ad regression line, add points
plot(y~x, type="n")
m = lm(y~x)
wx = par("usr")[1:2]
# This is just to get two numbers to generate new "X" observations.
new.x = seq(wx[1], wx[2], len=100)
pred = predict(m, new=data.frame(x = new.x), interval="conf")
# This "pred" is a matrix with 3 columns: fit, lwr (lower), upr (upper)
lines(new.x, pred[, "fit"], lwd=2)
lines(new.x, pred[, "lwr"], lty=3)
lines(new.x, pred[, "upr"], lty=3)
points(x, y, pch=16, col="steelblue")
### Alternative: Plot Confidence Band:
plot(y~x, type="n")
polygon(c(new.x, rev(new.x)), c(pred[, "lwr"], rev(pred[, "upr"])), border=NA, col=blues9[3])
lines(new.x, pred[,"fit"], lwd=2, col=blues9[8])
points(x, y, pch=16)
box()
dim(prop)
setwd("/Users/jm/Downloads")
prop<-read.table("propdata.txt", header=T)
prop
x = mtcars$wt
y = mtcars$drat
# prepare plot, fit model, get predictions
# add lines for confidence limits ad regression line, add points
plot(y~x, type="n")
m = lm(y~x)
wx = par("usr")[1:2]
# This is just to get two numbers to generate new "X" observations.
new.x = seq(wx[1], wx[2], len=100)
pred = predict(m, new=data.frame(x = new.x), interval="conf")
# This "pred" is a matrix with 3 columns: fit, lwr (lower), upr (upper)
lines(new.x, pred[, "fit"], lwd=2)
lines(new.x, pred[, "lwr"], lty=3)
lines(new.x, pred[, "upr"], lty=3)
points(x, y, pch=16, col="steelblue")
### Alternative: Plot Confidence Band:
plot(y~x, type="n")
polygon(c(new.x, rev(new.x)), c(pred[, "lwr"], rev(pred[, "upr"])), border=NA, col=blues9[3])
lines(new.x, pred[,"fit"], lwd=2, col=blues9[8])
points(x, y, pch=16)
box()
dim(prop)
ym <- ch2.prop$ShearStrength.y
xm <- ch2.prop$Propellant.Age.x
ch2.lm <- lm(y~x) # Fit a simple regression model
summary(ch2.lm)
anova(ch2.lm)
setwd("/Users/jm/Downloads")
prop<-read.table("propdata.txt", header=T)
prop
x = mtcars$wt
y = mtcars$drat
# prepare plot, fit model, get predictions
# add lines for confidence limits ad regression line, add points
plot(y~x, type="n")
m = lm(y~x)
wx = par("usr")[1:2]
# This is just to get two numbers to generate new "X" observations.
new.x = seq(wx[1], wx[2], len=100)
pred = predict(m, new=data.frame(x = new.x), interval="conf")
# This "pred" is a matrix with 3 columns: fit, lwr (lower), upr (upper)
lines(new.x, pred[, "fit"], lwd=2)
lines(new.x, pred[, "lwr"], lty=3)
lines(new.x, pred[, "upr"], lty=3)
points(x, y, pch=16, col="steelblue")
### Alternative: Plot Confidence Band:
plot(y~x, type="n")
polygon(c(new.x, rev(new.x)), c(pred[, "lwr"], rev(pred[, "upr"])), border=NA, col=blues9[3])
lines(new.x, pred[,"fit"], lwd=2, col=blues9[8])
points(x, y, pch=16)
box()
dim(prop)
ym <- prop$ShearStrength.y
xm <- prop$Propellant.Age.x
prop.lm <- lm(ym~xm) # Fit a simple regression model
summary(prop.lm)
anova(prop.lm)
setwd("/Users/jm/Downloads")
prop<-read.table("propdata.txt", header=T)
prop
x = mtcars$wt
y = mtcars$drat
# prepare plot, fit model, get predictions
# add lines for confidence limits ad regression line, add points
plot(y~x, type="n")
m = lm(y~x)
wx = par("usr")[1:2]
# This is just to get two numbers to generate new "X" observations.
new.x = seq(wx[1], wx[2], len=100)
pred = predict(m, new=data.frame(x = new.x), interval="conf")
# This "pred" is a matrix with 3 columns: fit, lwr (lower), upr (upper)
lines(new.x, pred[, "fit"], lwd=2)
lines(new.x, pred[, "lwr"], lty=3)
lines(new.x, pred[, "upr"], lty=3)
points(x, y, pch=16, col="steelblue")
### Alternative: Plot Confidence Band:
plot(y~x, type="n")
polygon(c(new.x, rev(new.x)), c(pred[, "lwr"], rev(pred[, "upr"])), border=NA, col=blues9[3])
lines(new.x, pred[,"fit"], lwd=2, col=blues9[8])
points(x, y, pch=16)
box()
dim(prop)
ym <- prop$ShearStrength.y
xm <- prop$Propellant.Age.x
prop.lm <- lm(ym~xm) # Fit a simple regression model
summary(prop.lm)
anova(prop.lm)
par(mfrow=c(2,2))
plot(prop.lm)
setwd("/Users/Desktop/MATH 5345/")
prop<-read.table("Ex2.7data.txt", header=T)
prop
setwd("/Users/jm/Desktop/MATH 5345/")
prop<-read.table("Ex2.7data.txt", header=T)
prop
setwd("/Users/jm/Desktop/MATH 5345/")
prop<-read.table("Ex2.7data.txt", header=T)
prop
x = data$hydro
y = data$purity
setwd("/Users/jm/Desktop/MATH 5345/")
data <- read.table("Ex2.7data.txt", header=T)
data
x = data$hydro
y = data$purity
setwd("/Users/jm/Desktop/MATH 5345/")
data <- read.table("Ex2.7data.txt", header=T)
data
x = data$hydro
y = data$purity
plot(y~x, type="n")
m = lm(y~x)
?par
wx = par("usr")[1:2]
wx
wx = par("usr")[1:2]
tp = par("usr")
wx
tp
new.x = seq(wx[1], wx[2], len=100)
new.x
?predict
data.frame(x = new.x)
pred = predict(m, new=data.frame(x = new.x), interval="conf")
pred
m
clr
clear
clear()
setwd("/Users/jm/Desktop/MATH 5345/")
data <- read.table("Ex2.7data.txt", header=T)
data
x = data$hydro
y = data$purity
# prepare plot, fit model, get predictions
# add lines for confidence limits ad regression line, add points
plot(y~x, type="n")
m = lm(y~x) # Fit the model (i.e. generate coefficients for your best fit line)
m
summary(m)$rsquared
summary(m)$r.squared
setwd("/Users/jm/Desktop/MATH 5345/")
data <- read.table("Ex2.7data.txt", header=T)
data
x = data$hydro
y = data$purity
mean(x)
mean(y)
var(x)
var(y)
mean(xy)
mean(x * y)
mean(x) * mean(y)
mean(x * x)
mean(x) * mean(x)
testx = [1, 2, 3, 4, 5]
testx = (1, 2, 3, 4, 5)
testx = seq(from=1, to=5, by=1)
testy = seq(from=1, to=5, by=1)
mean(testx)
mean(testy)
mean(testx * testy)
