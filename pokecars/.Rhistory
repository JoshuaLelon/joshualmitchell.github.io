install.packages("leaps")
install.packages("car")
library(leaps)
library(car)
# ?regsubsets. # No documentation for ‘regsubsets.’ in specified packages and libraries
setwd("/Users/jm/joshualmitchell.github.io/MATH5345/HW6/")
q1data <- read.table("HW6Q1.txt", header=T)
q2data <- read.table("HW6Q2.txt", header=T)
q3data <- read.table("HW6Q3.txt", header=T)
q4data <- read.table("HW6Q4.txt", header=T)
q5data <- read.table("HW6Q5.txt", header=T)
q1data
q2data
q1lm <- lm(y ~ x1 + x2 + x3, data=q1data)
q1lm <- lm(y ~ x1 + x2 + x3, data=q1data)
plot(q1data$x1, resid(q1lm),  main="Residuals vs x1", xlab="x1", ylab="Residuals")
abline(h = 0, col="red")
plot(q1data$x2, resid(q1lm),  main="Residuals vs x2", xlab="x2", ylab="Residuals")
abline(h = 0, col="red")
plot(q1data$x3, resid(q1lm),  main="Residuals vs x3", xlab="x3", ylab="Residuals")
abline(h = 0, col="red")
q1lm <- lm(y ~ as.factor(x1) + as.factor(x2) + as.factor(x3), data=q1data)
plot(q1data$x1, resid(q1lm),  main="Residuals vs x1", xlab="x1", ylab="Residuals")
abline(h = 0, col="red")
plot(q1data$x2, resid(q1lm),  main="Residuals vs x2", xlab="x2", ylab="Residuals")
abline(h = 0, col="red")
plot(q1data$x3, resid(q1lm),  main="Residuals vs x3", xlab="x3", ylab="Residuals")
abline(h = 0, col="red")
q1lm <- lm(y ~ as.factor(x1) + as.factor(x2) + as.factor(x3), data=q1data)
plot(q1lm)
plot(q1lm)
hist(y)
hist(q1data$y)
str(y)
str(q1data)
q1lm <- lm(y ~ as.factor(x1) + as.factor(x2) + as.factor(x3), data=q1data)
summary(q1lm)
plot(q1lm)
abline(h = 0, col="red")
plot(resid(q1lm), q1lm$fitted.values)
xtable(q1lm)
xtable(summary(q1lm))
library(xtable)
xtable(summary(q1lm))
xtable(summary(q1lm))
plot(q1data$x3, resid(q1lm),  main="Residuals vs x3", xlab="x3", ylab="Residuals")
abline(h = 0, col="red")
abline(h = 1, col="red")
anova(q1lm)
xtable(anova(q1lm))
scatterplot(q1data)
scatterplot(data=q1data)
pairs(~y + x1 + x2 + x3, data = q1data,
main = "Scatterplot Matrix Q1")
q2data <- read.table("HW6Q2.txt", header=T)
pairs(~y + x1 + x2 + x3, data = q2data, main = "Scatterplot Matrix Q2")
str(q2data)
plot(q2data$visc, q2data$temp)
q2lm <- lm(q2data$visc ~ q2data$temp)
xtable(summary(q2lm))
summary(q2lm)
plot(resid(q2lm), q2lm$fitted.values)
q2lm <- lm(q2data$visc ~ q2data$temp + exp(q2data$temp))
summary(q2lm)
plot(resid(q2lm), q2lm$fitted.values)
xtable(summary(q2lm))
summary(q2lm)
plot(q2lm$fitted.values, resid(q2lm))
abline(h = 0, col="red")
q2lm <- lm(q2data$visc ~ q2data$temp + exp(q2data$temp))
summary(q2lm)
plot(q2lm$fitted.values, resid(q2lm))
q2lm <- lm(q2data$visc ~ q2data$temp + exp(q2data$temp))
summary(q2lm)
plot(q2lm$fitted.values, resid(q2lm))
abline(h = 0, col="red")
plot(q2lm$fitted.values, resid(q2lm))
abline(h = 0, col="red")
plot(q2data$temp, resid(q2lm))
abline(h = 0, col="red")
plot(exp(q2data$temp), resid(q2lm))
abline(h = 0, col="red")
plot(q2lm$fitted.values, resid(q2lm), main="Residuals vs Fitted", xlab="Fitted", ylab="Residuals")
abline(h = 0, col="red")
plot(q2data$temp, resid(q2lm), main="Residuals vs Temp", xlab="Temp", ylab="Residuals")
abline(h = 0, col="red")
plot(exp(q2data$temp), resid(q2lm), main="Residuals vs e^(temp)", xlab="e^(temp)", ylab="Residuals")
abline(h = 0, col="red")
q2lm_t <- lm(log(q2data$visc) ~ q2data$temp + exp(q2data$temp))
summary(q2lm_t)
plot(q2lm_t$fitted.values, resid(q2lm_t), main="[Transformed] Residuals vs Fitted", xlab="Fitted", ylab="Residuals")
abline(h = 0, col="red")
plot(q2data$temp, resid(q2lm_t), main="[Transformed] Residuals vs Temp", xlab="Temp", ylab="Residuals")
abline(h = 0, col="red")
plot(exp(q2data$temp), resid(q2lm_t), main="[Transformed] Residuals vs e^(temp)", xlab="e^(temp)", ylab="Residuals")
abline(h = 0, col="red")
xtable(summary(q2lm_t))
q3data
q3lm <- lm(y ~ x1 + x2 + x3 + x4)
q3lm <- lm(y ~ x1 + x2 + x3 + x4, data = q3data)
summary(q3lm)
hist(q3data$y)
plot(q3lm$fitted.values, resid(q3lm), main="Residuals vs Fitted", xlab="Fitted", ylab="Residuals")
abline(h = 0, col="red")
summary(q3lm)
xtable(summary(q3lm))
q1data <- read.table("HW6Q1.txt", header=T)
q1data
xtable(q1data)
q4data <- read.table("HW6Q4.txt", header=T)
q4data
q3lm <- lm(y ~ x, data=q4data)
plot(x, y)
plot(x, y, data=q4data)
plot(q4data$x, q4data$y)
abline(q3lm, col="red") # regression line (y~x)
summary(q3lm)
plot(q4data$y, q3lm$fitted.values)
hist(q4data$y)
plot(q4data$y, q4lm$fitted.values)
q4data <- read.table("HW6Q4.txt", header=T)
q4data
q4lm <- lm(y ~ x, data=q4data)
plot(q4data$x, q4data$y)
abline(q4lm, col="red") # regression line (y~x)
summary(q4lm)
plot(q4data$y, q4lm$fitted.values)
hist(q4data$y)
plot(q4lm$fitted.values, resid(q4lm))
abline(h = 0, col="red")
q4lm_t <- lm(y ~ x + x^2)
q4lm_t <- lm(y ~ x + x**2)
q4lm_t <- lm(y ~ x + x**2, data=q4data)
q4lm_t <- lm(y ~ x + x^2, data=q4data)
summary(q4lm_t)
q4lm_t <- lm(y ~ x + x^2, data=q4data)
summary(q4lm_t)
q4lm_t <- lm(y ~ x + x**2, data=q4data)
summary(q4lm_t)
q4lm_t <- lm(y ~ x + exp(x), data=q4data)
summary(q4lm_t)
q4lm_t <- lm(y ~ x + (x^2), data=q4data)
summary(q4lm_t)
q4lm_t <- lm(y ~ x + I(x^2), data=q4data)
summary(q4lm_t)
xtable(summary(q4lm_t))
plot(q4data$x^2, y)
plot(q4data$x^2, y, data=q4data)
plot(q4data$x^2, q4data$y, data=q4data)
plot(q4data$x^2, q4data$y)
plot((q4data$x)^2, q4data$y)
plot(q4data$y, q4lm_t$fitted.values)
plot(q4lm_t$fitted.values, resid(q4lm_t))
abline(h = 0, col="red")
summary(q4lm_t)
q5data <- read.table("HW6Q5.txt", header=T)
q5data
q5lm <- lm(y ~ x1 + x11)
q5lm <- lm(y ~ x1 + x11, data=q5data)
summary(q5lm)
xtable(summary(q5lm))
q5lm_B <- lm(y ~ x1 + x11 + (x1 * x11), data=q5data)
summary(q5lm_B)
xtable(summary(q5lm_B))
q5data
q5data <- read.table("HW6Q5.txt", header=T)
q5lm <- lm(y ~ x1 + as.factor(x11), data=q5data)
summary(q5lm)
xtable(summary(q5lm))
q5lm_B <- lm(y ~ x1 + as.factor(x11) + (x1 * as.factor(x11)), data=q5data)
summary(q5lm_B)
xtable(summary(q5lm_B))
q3data
q3data <- read.table("HW6Q3.txt", header=T)
q3lm <- lm(y ~ x1 + x2 + x3 + x4, data = q3data)
hist(q3data$y)
plot(q3lm$fitted.values, resid(q3lm), main="Residuals vs Fitted", xlab="Fitted", ylab="Residuals")
abline(h = 0, col="red")
q3lm_fact <- lm(y ~ as.factor(x1) + as.factor(x2) + as.factor(x3) + x4, data = q3data)
install.packages("alr3")
table(autodata$origin)
setwd("/Users/jm/joshualmitchell.github.io/pokecars")
library(leaps)
library(car)
autodata <- read.table("raw_auto-mpg.text", header=TRUE)
colnames(autodata) <- c("mpg_c", "cylnum_mvd", "displ_c", "hp_c", "wgt_c", "acc_c", "modelyr_mvd", "origin_mvd", "name_str")
table(autodata$origin)
table(autodata$modelyr_mvd)
setwd("/Users/jm/joshualmitchell.github.io/pokecars")
library(leaps)
library(car)
autodata <- read.table("raw_auto-mpg.text", header=TRUE)
colnames(autodata) <- c("mpg_c", "cylnum_mvd", "displ_c", "hp_c", "wgt_c", "acc_c", "modelyr_mvd", "origin_mvd", "name_str")
# Step 1: Explore and check your data
# -- Using R functions: dim, summary, hist, plot, boxplot, table (for categorical variables)
# -- to check the dimension, distribution, potential outliers for data (y, x1, x2...)
# -- consider removing incorrect or "weird" data points (but be VERY careful)
str(autodata)
summary(autodata)
# Check normality of "y" (we don't care about normality of x):
hist(autodata$mpg_c, main="MPG Frequency", xlab="Miles per gallon", ylab="Number of cars with x miles per galon")
# Make origin a factor (since it's not continuous)
autodata$origin_mvd <- as.factor(autodata$origin_mvd)
# Remove data points with missing horsepower values and set them to numeric columns
autodata <- subset(autodata, !autodata[ , 4] == "?")
autodata$hp_c <- as.numeric(as.character(autodata$hp_c))
lm7 <- lm(mpg_c ~ wgt_c + modelyr_mvd + origin_mvd + hp_c + displ_c + cylnum_mvd + acc_c, data = autodata)
summary(lm7)
lm7_cat <- lm(mpg_c ~ wgt_c + as.factor(modelyr_mvd) + origin_mvd + hp_c + displ_c + cylnum_mvd + acc_c, data = autodata)
summary(lm7_cat)
setwd("/Users/jm/joshualmitchell.github.io/pokecars")
library(leaps)
library(car)
autodata <- read.table("raw_auto-mpg.text", header=TRUE)
colnames(autodata) <- c("mpg_c", "cylnum_mvd", "displ_c", "hp_c", "wgt_c", "acc_c", "modelyr_mvd", "origin_mvd", "name_str")
# Step 1: Explore and check your data
# -- Using R functions: dim, summary, hist, plot, boxplot, table (for categorical variables)
# -- to check the dimension, distribution, potential outliers for data (y, x1, x2...)
# -- consider removing incorrect or "weird" data points (but be VERY careful)
str(autodata)
summary(autodata)
# Check normality of "y" (we don't care about normality of x):
hist(autodata$mpg_c, main="MPG Frequency", xlab="Miles per gallon", ylab="Number of cars with x miles per galon")
# Make origin a factor (since it's not continuous)
autodata$origin_mvd <- as.factor(autodata$origin_mvd)
# Remove data points with missing horsepower values and set them to numeric columns
autodata <- subset(autodata, !autodata[ , 4] == "?")
autodata$hp_c <- as.numeric(as.character(autodata$hp_c))
# Let's check constant variance:
# Residual Plots:
str(autodata)
summary(lm7_cat)
plot(lm7$fitted.values, resid(lm7), main="Residuals vs Fitted Values", xlab="Fitted Values", ylab="Residuals")
abline(h = 0, col="red")
