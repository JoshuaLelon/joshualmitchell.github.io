summary.out <- summary(regsub.exhaust)
summary.out
# Results:
# 1: wgt_c
# R^2: 0.6923, AR^2: 0.6915404, MSQ: 18.8, CP: 282.222846 (- 2) = 271.677433
# 2: wgt_c + modelyr_mvd
# R^2: 0.8082216, AR^2: 0.8072331, MSQ: 11.8, CP: 32.145081 (- 3) = 29.145081
# 3: wgt_c + modelyr_mvd + origin_mvd3
# R^2: 0.8122894, AR^2: 0.8108343, MSQ: 11.2, CP: 25.297005 (- 4) = 21.297005
# 4: wgt_c + modelyr_mvd + origin_mvd3 + origin_mvd2
# R^2: 0.8192026, AR^2: 0.8173290, MSQ: 11.1, CP: 12.259949 (- 5) = 7.259949
# 5: wgt_c + modelyr_mvd + origin_mvd3 + origin_mvd2 + displ_c
# R^2: 0.8207515, AR^2: 0.8184236, MSQ: 11.1, CP: 10.890883 (- 6) = 4.890833
# 6: wgt_c + modelyr_mvd + origin_mvd3 + origin_mvd2 + displ_c + hp_c
# R^2: 0.8228173, AR^2: 0.8200488, MSQ: 11.0, CP: 8.397418 (- 7) = 1.397418
# 7: wgt_c + modelyr_mvd + origin_mvd3 + origin_mvd2 + displ_c + hp_c + cylnum_mvd
# R^2: 0.8240406, AR^2: 0.8208246, MSQ: 10.9, CP: 7.736603 (- 8) = -0.263397
# Selected by forward, backward, and stepwise selection!
# 8: wgt_c + modelyr_mvd + origin_mvd3 + origin_mvd2 + displ_c + hp_c + cylnum_mvd + acc_c
# R^2: 0.8243792, AR^2: 0.8207013, MSQ: 10.9, CP: 9.000000 (- 9) = 0
# Let's check normality and constant variance:
lm7 <- lm(mpg_c ~ wgt_c + modelyr_mvd + origin_mvd + hp_c + displ_c + cylnum_mvd + acc_c, data = autodata)
plot(lm7)
plot(resid(lm7), autodata$wgt_c, main="Residuals vs Weight", xlab="Weight", ylab="Residuals")
plot(resid(lm7), autodata$modelyr_mvd, main="Residuals vs Model Year", xlab="Model Year", ylab="Residuals")
plot(resid(lm7), autodata$wgt_c, main="Residuals vs Weight", xlab="Weight", ylab="Residuals")
plot(autodata$wgt_c, resid(lm7), main="Residuals vs Weight", xlab="Weight", ylab="Residuals")
abline(h = 0, col="red")
plot(autodata$modelyr_mvd, resid(lm7),  main="Residuals vs Model Year", xlab="Model Year", ylab="Residuals")
abline(h = 0, col="red")
plot(autodata$origin_mvd, resid(lm7),  main="Residuals vs Origin", xlab="Origin", ylab="Residuals")
abline(h = 0, col="red")
plot(autodata$hp_c, resid(lm7), autodata$hp_c, main="Residuals vs HP", xlab="HP", ylab="Residuals")
plot(autodata$hp_c, resid(lm7), main="Residuals vs HP", xlab="HP", ylab="Residuals")
abline(h = 0, col="red")
plot(autodata$hp_c, autodata$mpg)
plot(autodata$wgt_c, autodata$mpg)
plot(autodata$wgt_c, log(autodata$mpg))
plot(lm7$fitted.values, resid(lm7), main="Fitted Values vs Residuals", xlab="Residuals", ylab="Fitted Values")
plot( resid(lm7), lm7$fitted.values, main="Fitted Values vs Residuals", xlab="Residuals", ylab="Fitted Values")
plot( lm7$fitted.values, resid(lm7), main="Fitted Values vs Residuals", xlab="Fitted Values", ylab="Residuals")
abline(h = 0, col="red")
lm7 <- lm(log(mpg_c) ~ wgt_c + modelyr_mvd + origin_mvd + hp_c + displ_c + cylnum_mvd + acc_c, data = autodata)
plot(lm7$fitted.values, resid(lm7), main="[Transformed] Fitted Values vs Residuals", xlab="Residuals", ylab="Fitted Values")
abline(h = 0, col="red")
lm7_no_hp <- lm(log(mpg_c) ~ wgt_c + origin_mvd + cylnum_mvd + displ_c + acc_c + modelyr_mvd, data = autodata)
lm7_hp_to_rest <- lm(hp_c ~ wgt_c + origin_mvd + cylnum_mvd + displ_c + acc_c + modelyr_mvd, data = autodata)
plot(resid(lm7_no_hp), resid(lm7_hp_to_rest), main="(full - hp_c) residuals vs (hp_c vs the rest) residuals", xlab="(hp_c vs the rest) residuals", ylab="(full - hp_c) residuals")
plot(autodata$hp_c, resid(lm7), main="Residuals vs HP", xlab="HP", ylab="Residuals")
abline(h = 0, col="red")
summary.out
summary.out
setwd("/Users/jm/joshualmitchell.github.io/pokecars")
library(leaps)
library(car)
autodata <- read.table("raw_auto-mpg.text", header=TRUE)
colnames(autodata) <- c("mpg_c", "cylnum_mvd", "displ_c", "hp_c", "wgt_c", "acc_c", "modelyr_mvd", "origin_mvd", "name_str")
# Step 1: Explore and check your data
# -- Using R functions: dim, summary, hist, plot, boxplot, table (for categorical variables)
# -- to check the dimension, distribution, potential outliers for data (y, x1, x2...)
# -- consider removing incorrect or "weird" data points (but be VERY careful)
dim(autodata)
summary(autodata)
# autodata$hp_c <- gsub("?",NA, autodata$hp_c, fixed = TRUE)
autodata <- subset(autodata, !autodata[ , 4] == "?")
autodata$hp_c <- as.numeric(as.character(autodata$hp_c))
# We don't check normal distribution for any regressors?
hist(autodata$mpg_c, main="MPG Frequency", xlab="Miles per gallon", ylab="Number of cars with x miles per galon")
barplot(table(autodata$cylnum_mvd), main="Cylinders Frequency", xlab="Number of Cylinders", ylab="Frequency")
hist(autodata$displ_c, main="Displacement Frequency", xlab="Displacement Amount", ylab="Frequency")
hist(autodata$hp_c, main="Horsepower Frequency", xlab="HP", ylab="Number of cars with x HP")
hist(autodata$wgt_c, main="Weight Frequency", xlab="Weight", ylab="Number of cars that weigh x")
hist(autodata$acc_c, main="Acceleration Frequency", xlab="Acceleration", ylab="Number of cars with x acceleration")
barplot(table(autodata$modelyr_mvd), main="Model Year Frequency", xlab="Model Year", ylab="Frequency")
barplot(table(autodata$origin_mvd), main="Origin Frequency", xlab="Origin Type", ylab="Frequency")
autodata$origin_mvd <- as.factor(autodata$origin_mvd)
# Step 2: Fit a multiple linear regression model
# -- Use lm to fit y ~ x1, x2 ..
# -- Get estimated linear model, R2, ANOVA, test significance of regression
full <- lm(mpg_c ~ cylnum_mvd + displ_c + hp_c + wgt_c + acc_c + modelyr_mvd + origin_mvd, data=autodata)
null <- lm(mpg_c ~ 1, data=autodata)
# Perform "forward" selection starting from the NULL model and set up the scope to have an upper = FULL model.
forw <- step(null, scope=list(lower=null, upper=full), direction="forward")
forw.lm <- lm(mpg_c ~ wgt_c + modelyr_mvd + origin_mvd + displ_c + hp_c + cylnum_mvd, data = autodata)
summary(forw.lm)
anova(forw.lm)
# Backwards Selection
back <- step(full, data=autodata, direction="backward")
back.lm <- lm(mpg_c ~ cylnum_mvd + displ_c + hp_c + wgt_c + modelyr_mvd + origin_mvd, data = autodata)
summary(back.lm)
anova(back.lm)
# Stepwise Selection
stepwise<- step(null, scope = list(upper=full), data=autodata, direction="both")
stepwise.lm <- lm(mpg_c ~ wgt_c + modelyr_mvd + origin_mvd + displ_c + hp_c + cylnum_mvd, data = autodata)
summary(stepwise.lm)
anova(stepwise.lm)
# All Possible Regressor Selection (using regsub)
regsub.exhaust<-regsubsets(mpg_c ~ cylnum_mvd + displ_c + hp_c + wgt_c + acc_c + modelyr_mvd + origin_mvd, data=autodata, nbest = 1, nvmax = NULL,force.in = NULL, force.out = NULL, intercept=TRUE, method = "exhaustive")
summary.out <- summary(regsub.exhaust)
summary.out
# Results:
summary.out
summary.out$rsq
summary.out$adjr2
cbind(summary.out$rsq)
summary(lm7)
anova(lm7)
lm7 <- lm(mpg_c ~ wgt_c + modelyr_mvd + origin_mvd + hp_c + displ_c + cylnum_mvd + acc_c, data = autodata)
plot(lm7)
plot(resid(lm7),  main="Residuals vs HP", xlab="HP", ylab="Residuals")
plot(autodata$hp_c, resid(lm7), main="Residuals vs HP", xlab="HP", ylab="Residuals")
abline(h = 0, col="red")
plot( lm7$fitted.values, resid(lm7), main="Fitted Values vs Residuals", xlab="Fitted Values", ylab="Residuals")
lm7 <- lm(log(mpg_c) ~ wgt_c + modelyr_mvd + origin_mvd + hp_c + displ_c + cylnum_mvd + acc_c, data = autodata)
plot(lm7$fitted.values, resid(lm7), main="[Transformed] Fitted Values vs Residuals", xlab="Residuals", ylab="Fitted Values")
plot(autodata$wgt_c, resid(lm7), main="Residuals vs Weight", xlab="Weight", ylab="Residuals")
plot(autodata$hp_c, resid(lm7), main="Residuals vs HP", xlab="HP", ylab="Residuals")
abline(h = 0, col="red")
plot(resid(lm7), autodata$wgt_c, main="Residuals vs Weight", ylab="Weight", xlab="Residuals")
plot(resid(lm7), autodata$wgt_c)
plot(autodata$wgt_c, resid(lm7), main="Residuals vs Weight", ylab="Residuals", xlab="Weight")
plot(autodata$modelyr_mvd, resid(lm7),  main="Residuals vs Model Year", xlab="Model Year", ylab="Residuals")
abline(h = 0, col="red")
plot(autodata$origin_mvd, resid(lm7),  main="Residuals vs Origin", xlab="Origin", ylab="Residuals")
abline(h = 0, col="red")
plot(autodata$wgt_c, resid(lm7), main="Residuals vs Weight", ylab="Residuals", xlab="Weight")
plot(autodata$hp_c, resid(lm7), main="Residuals vs HP", xlab="HP", ylab="Residuals")
abline(h = 0, col="red")
plot(autodata$displ_c, resid(lm7), main="Residuals vs Displacement", xlab="Displacement", ylab="Residuals")
abline(h = 0, col="red")
plot(autodata$cylnum_mvd, resid(lm7),  main="Residuals vs Cylinder Amount", xlab="Cylinder Amount", ylab="Residuals")
abline(h = 0, col="red")
plot(autodata$acc_c, resid(lm7),  main="Residuals vs Acceleration", xlab="Acceleration", ylab="Residuals")
abline(h = 0, col="red")
plot(lm7$fitted.values, resid(lm7), main="Fitted Values vs Residuals", xlab="Fitted Values", ylab="Residuals")
abline(h = 0, col="red")
lm7 <- lm(log(mpg_c) ~ wgt_c + modelyr_mvd + origin_mvd + hp_c + displ_c + cylnum_mvd + acc_c, data = autodata)
plot(lm7$fitted.values, resid(lm7), main="[Transformed] Fitted Values vs Residuals", xlab="Residuals", ylab="Fitted Values")
abline(h = 0, col="red")
qqnorm(resid(lm7))
qqline(resid(lm7))
setwd("/Users/jm/joshualmitchell.github.io/pokecars")
library(leaps)
library(car)
autodata <- read.table("raw_auto-mpg.text", header=TRUE)
colnames(autodata) <- c("mpg_c", "cylnum_mvd", "displ_c", "hp_c", "wgt_c", "acc_c", "modelyr_mvd", "origin_mvd", "name_str")
# Step 1: Explore and check your data
# -- Using R functions: dim, summary, hist, plot, boxplot, table (for categorical variables)
# -- to check the dimension, distribution, potential outliers for data (y, x1, x2...)
# -- consider removing incorrect or "weird" data points (but be VERY careful)
dim(autodata)
summary(autodata)
# autodata$hp_c <- gsub("?",NA, autodata$hp_c, fixed = TRUE)
autodata <- subset(autodata, !autodata[ , 4] == "?")
autodata$hp_c <- as.numeric(as.character(autodata$hp_c))
autodata$origin_mvd <- as.factor(autodata$origin_mvd)
full <- lm(mpg_c ~ cylnum_mvd + displ_c + hp_c + wgt_c + acc_c + modelyr_mvd + origin_mvd, data=autodata)
null <- lm(mpg_c ~ 1, data=autodata)
forw <- step(null, scope=list(lower=null, upper=full), direction="forward")
forw.lm <- lm(mpg_c ~ wgt_c + modelyr_mvd + origin_mvd + displ_c + hp_c + cylnum_mvd, data = autodata)
summary(forw.lm)
anova(forw.lm)
back <- step(full, data=autodata, direction="backward")
back.lm <- lm(mpg_c ~ cylnum_mvd + displ_c + hp_c + wgt_c + modelyr_mvd + origin_mvd, data = autodata)
summary(back.lm)
anova(back.lm)
stepwise<- step(null, scope = list(upper=full), data=autodata, direction="both")
stepwise.lm <- lm(mpg_c ~ wgt_c + modelyr_mvd + origin_mvd + displ_c + hp_c + cylnum_mvd, data = autodata)
summary(stepwise.lm)
anova(stepwise.lm)
regsub.exhaust<-regsubsets(mpg_c ~ cylnum_mvd + displ_c + hp_c + wgt_c + acc_c + modelyr_mvd + origin_mvd, data=autodata, nbest = 1, nvmax = NULL,force.in = NULL, force.out = NULL, intercept=TRUE, method = "exhaustive")
summary.out <- summary(regsub.exhaust)
summary.out
summary.out
summary.out
summary.out$which
cbind(summary.out$rsq, summary.out$rsq, summary.out$adjr2)
cbind(summary.out$rsq, summary.out$adjr2, summary.out$rss)
cbind(summary.out$rsq, summary.out$adjr2, summary.out$rss/(n - 2:9))
cbind(summary.out$rsq, summary.out$adjr2, summary.out$rss/(nrow(autodata) - 2:9))
cbind(summary.out$rsq, summary.out$adjr2, summary.out$rss/(nrow(autodata) - 2:9), summary.out$cp - 2:9)
cbind(R=summary.out$rsq, summary.out$adjr2, summary.out$rss/(nrow(autodata) - 2:9), summary.out$cp - 2:9)
cbind(R^2=summary.out$rsq, summary.out$adjr2, summary.out$rss/(nrow(autodata) - 2:9), summary.out$cp - 2:9)
cbind("R^2"=summary.out$rsq, summary.out$adjr2, summary.out$rss/(nrow(autodata) - 2:9), summary.out$cp - 2:9)
cbind("R-squared"=summary.out$rsq, "adj R-squared"=summary.out$adjr2, "MS_res"=summary.out$rss/(nrow(autodata) - 2:9), "CP - p"=summary.out$cp - 2:9)
rownames(model_info) <- c(1:8)
model_info <- cbind("R-squared"=summary.out$rsq, "adj R-squared"=summary.out$adjr2, "MS_res"=summary.out$rss/(nrow(autodata) - 2:9), "CP - p"=summary.out$cp - 2:9)
rownames(model_info) <- c(1:8)
model_info
model_info <- cbind("# Regressors"=1:8, "R-squared"=summary.out$rsq, "adj R-squared"=summary.out$adjr2, "MS_res"=summary.out$rss/(nrow(autodata) - 2:9), "CP - p"=summary.out$cp - 2:9)
model_info
summary.out
table(summary.out)
plot(autodata$wgt_c, resid(lm7), main="Residuals vs Weight", ylab="Residuals", xlab="Weight")
lm7_no_hp <- lm(mpg_c ~ wgt_c + origin_mvd + cylnum_mvd + displ_c + acc_c + modelyr_mvd, data = autodata)
lm7_hp_to_rest <- lm(hp_c ~ wgt_c + origin_mvd + cylnum_mvd + displ_c + acc_c + modelyr_mvd, data = autodata)
plot(resid(lm7_no_hp), resid(lm7_hp_to_rest), main="(full - hp_c) residuals vs (hp_c vs the rest) residuals", xlab="(hp_c vs the rest) residuals", ylab="(full - hp_c) residuals")
lm7_no_wgt <- lm(mpg_c ~ modelyr_mvd + origin_mvd + hp_c + displ_c + cylnum_mvd + acc_c, data = autodata)
lm7_wgt_to_rest <- lm(wgt_c ~ modelyr_mvd + origin_mvd + hp_c + displ_c + cylnum_mvd + acc_c, data = autodata)
plot(resid(lm7_no_wgt), resid(lm7_wgt_to_rest), main="(full - wgt_c) residuals vs (wgt_c vs the rest) residuals", xlab="(wgt_c vs the rest) residuals", ylab="(full - wgt_c) residuals")
plot(lm7$fitted.values, resid(lm7), main="Fitted Values vs Residuals", xlab="Fitted Values", ylab="Residuals")
lm7 <- lm(mpg_c ~ wgt_c + modelyr_mvd + origin_mvd + hp_c + displ_c + cylnum_mvd + acc_c, data = autodata)
plot(lm7$fitted.values, resid(lm7), main="Fitted Values vs Residuals", xlab="Fitted Values", ylab="Residuals")
abline(h = 0, col="red")
plot(lm7$fitted.values, resid(lm7), main="Residuals vs Fitted Values", xlab="Fitted Values", ylab="Residuals")
abline(h = 0, col="red")
lm7 <- lm(log(mpg_c) ~ wgt_c + modelyr_mvd + origin_mvd + hp_c + displ_c + cylnum_mvd + acc_c, data = autodata)
plot(lm7$fitted.values, resid(lm7), main="[Transformed] Residuals vs Fitted Values", xlab="Residuals", ylab="Fitted Values")
abline(h = 0, col="red")
qqnorm(resid(lm7))
qqline(resid(lm7))
lm7_no_wgt <- lm(log(mpg_c) ~ modelyr_mvd + origin_mvd + hp_c + displ_c + cylnum_mvd + acc_c, data = autodata)
lm7_wgt_to_rest <- lm(wgt_c ~ modelyr_mvd + origin_mvd + hp_c + displ_c + cylnum_mvd + acc_c, data = autodata)
plot(resid(lm7_no_wgt), resid(lm7_wgt_to_rest), main="(full - wgt_c) residuals vs (wgt_c vs the rest) residuals", xlab="(wgt_c vs the rest) residuals", ylab="(full - wgt_c) residuals")
lm7_no_hp <- lm(log(mpg_c) ~ wgt_c + origin_mvd + cylnum_mvd + displ_c + acc_c + modelyr_mvd, data = autodata)
lm7_hp_to_rest <- lm(hp_c ~ wgt_c + origin_mvd + cylnum_mvd + displ_c + acc_c + modelyr_mvd, data = autodata)
plot(resid(lm7_no_hp), resid(lm7_hp_to_rest), main="(full - hp_c) residuals vs (hp_c vs the rest) residuals", xlab="(hp_c vs the rest) residuals", ylab="(full - hp_c) residuals")
full <- lm(log(mpg_c) ~ cylnum_mvd + displ_c + hp_c + wgt_c + acc_c + modelyr_mvd + origin_mvd, data=autodata)
null <- lm(log(mpg_c) ~ 1, data=autodata)
forw <- step(null, scope=list(lower=null, upper=full), direction="forward")
forw.lm <- lm(log(mpg_c) ~ wgt_c + modelyr_mvd + origin_mvd + hp_c + displ_c + cylnum_mvd, data = autodata)
summary(forw.lm)
back <- step(full, data=autodata, direction="backward")
back.lm <- lm(log(mpg_c) ~ cylnum_mvd + displ_c + hp_c + wgt_c + modelyr_mvd + origin_mvd, data = autodata)
summary(back.lm)
anova(back.lm)
stepwise<- step(null, scope = list(upper=full), data=autodata, direction="both")
stepwise.lm <- lm(mpg_c ~ wgt_c + modelyr_mvd + origin_mvd + hp_c + displ_c + cylnum_mvd, data = autodata)
summary(stepwise.lm)
anova(stepwise.lm)
regsub.exhaust<-regsubsets(log(mpg_c) ~ cylnum_mvd + displ_c + hp_c + wgt_c + acc_c + modelyr_mvd + origin_mvd, data=autodata, nbest = 1, nvmax = NULL,force.in = NULL, force.out = NULL, intercept=TRUE, method = "exhaustive")
summary.out <- summary(regsub.exhaust)
summary.out
model_info <- cbind("# Regressors"=1:8, "R-squared"=summary.out$rsq, "adj R-squared"=summary.out$adjr2, "MS_res"=summary.out$rss/(nrow(autodata) - 2:9), "CP - p"=summary.out$cp - 2:9)
model_info
vif(lm7)
final_lm <- lm(log(mpg_c) ~ wgt_c + modelyr_mvd + origin_mvd + hp_c + displ_c + cylnum_mvd, data = autodata)
summary(final_lm)
anova(final_lm)
vif(final_lm)
w <- abs(rstudent(final_lm)) < 3 & abs(cooks.distance(final_lm)) < 4/nrow(final_lm$model)
final_lm_2 <- update(final_lm, weights=as.numeric(w))
summary(final_lm_2) # They all become significant except displacement
anova(final_lm_2)
print(influence.measures(final_lm))
inflpnts <- cbind(1:nrows(final_lm), influence.measures(final_lm))
inflpnts <- cbind(1:nrow(final_lm), influence.measures(final_lm))
inflpnts <- cbind(1:nrow(autodata), influence.measures(final_lm))
str(nrow(autodata))
str(influence.measures(final_lm))
print(influence.measures(final_lm))
inflpnts <- influence.measures(final_lm)
inflpnts
cbind(1:391, inflpnts)
cbind("hi"=1:391, inflpnts)
inflpnts <- influence.measures(final_lm)
summary(inflpnts)
which(apply(inflpnts$is.inf, 1, any))
inflpnts
data_with_inflpnts <- influence.measures(final_lm)
inflpnts <- which(apply(data_with_inflpnts$is.inf, 1, any))
data_wo_inflpnts <- autodata[-inflpnts,]
data_wo_inflpnts
str(data_wo_inflpnts)
368/391
final_lm_2 <- lm(log(mpg_c) ~ wgt_c + modelyr_mvd + origin_mvd + hp_c + displ_c + cylnum_mvd, data = data_wo_inflpnts)
summary(final_lm_2) # They all become significant except displacement
anova(final_lm_2)
vif(final_lm_2)
vif(final_lm)
vif(lm7)
final_lm_2_vif <- vif(final_lm_2)
as.data.frame(final_lm_2_vif)
lm7_vif <- vif(lm7)
lm7_vif <- as.data.frame(lm7_vif)
table(lm7_vif)
setwd("/Users/jm/joshualmitchell.github.io/pokecars")
library(leaps)
library(car)
autodata <- read.table("raw_auto-mpg.text", header=TRUE)
colnames(autodata) <- c("mpg_c", "cylnum_mvd", "displ_c", "hp_c", "wgt_c", "acc_c", "modelyr_mvd", "origin_mvd", "name_str")
# Step 1: Explore and check your data
# -- Using R functions: dim, summary, hist, plot, boxplot, table (for categorical variables)
# -- to check the dimension, distribution, potential outliers for data (y, x1, x2...)
# -- consider removing incorrect or "weird" data points (but be VERY careful)
dim(autodata)
summary(autodata)
# autodata$hp_c <- gsub("?",NA, autodata$hp_c, fixed = TRUE)
autodata <- subset(autodata, !autodata[ , 4] == "?")
autodata$hp_c <- as.numeric(as.character(autodata$hp_c))
# Check normality of "y" (we don't care about normality of x):
hist(autodata$mpg_c, main="MPG Frequency", xlab="Miles per gallon", ylab="Number of cars with x miles per galon")
# Make origin a factor (since it's not continuous)
autodata$origin_mvd <- as.factor(autodata$origin_mvd)
# Step 2: Fit a multiple linear regression model
# -- Use lm to fit y ~ x1, x2 ..
# -- Get estimated linear model, R2, ANOVA, test significance of regression
full <- lm(mpg_c ~ cylnum_mvd + displ_c + hp_c + wgt_c + acc_c + modelyr_mvd + origin_mvd, data=autodata)
null <- lm(mpg_c ~ 1, data=autodata)
# Perform "forward" selection starting from the NULL model and set up the scope to have an upper = FULL model.
forw <- step(null, scope=list(lower=null, upper=full), direction="forward")
forw.lm <- lm(mpg_c ~ wgt_c + modelyr_mvd + origin_mvd + displ_c + hp_c + cylnum_mvd, data = autodata)
summary(forw.lm)
anova(forw.lm)
# Backwards Selection
back <- step(full, data=autodata, direction="backward")
back.lm <- lm(mpg_c ~ cylnum_mvd + displ_c + hp_c + wgt_c + modelyr_mvd + origin_mvd, data = autodata)
summary(back.lm)
anova(back.lm)
# Stepwise Selection
stepwise<- step(null, scope = list(upper=full), data=autodata, direction="both")
stepwise.lm <- lm(mpg_c ~ wgt_c + modelyr_mvd + origin_mvd + displ_c + hp_c + cylnum_mvd, data = autodata)
summary(stepwise.lm)
anova(stepwise.lm)
# All Possible Regressor Selection (using regsub)
regsub.exhaust<-regsubsets(mpg_c ~ cylnum_mvd + displ_c + hp_c + wgt_c + acc_c + modelyr_mvd + origin_mvd, data=autodata, nbest = 1, nvmax = NULL,force.in = NULL, force.out = NULL, intercept=TRUE, method = "exhaustive")
summary.out <- summary(regsub.exhaust)
summary.out
model_info <- cbind("# Regressors"=1:8, "R-squared"=summary.out$rsq, "adj R-squared"=summary.out$adjr2, "MS_res"=summary.out$rss/(nrow(autodata) - 2:9), "CP - p"=summary.out$cp - 2:9)
# Let's check normality and constant variance:
lm7 <- lm(mpg_c ~ wgt_c + modelyr_mvd + origin_mvd + hp_c + displ_c + cylnum_mvd + acc_c, data = autodata)
# Residual Plots:
plot(autodata$wgt_c, resid(lm7), main="Residuals vs Weight", ylab="Residuals", xlab="Weight")
# possibly do a squared transformation
abline(h = 0, col="red")
plot(autodata$modelyr_mvd, resid(lm7),  main="Residuals vs Model Year", xlab="Model Year", ylab="Residuals")
abline(h = 0, col="red")
plot(autodata$origin_mvd, resid(lm7),  main="Residuals vs Origin", xlab="Origin", ylab="Residuals")
abline(h = 0, col="red")
plot(autodata$hp_c, resid(lm7), main="Residuals vs HP", xlab="HP", ylab="Residuals")
# Possibly add a second beta for hp^2
abline(h = 0, col="red")
plot(autodata$displ_c, resid(lm7), main="Residuals vs Displacement", xlab="Displacement", ylab="Residuals")
abline(h = 0, col="red")
plot(autodata$cylnum_mvd, resid(lm7),  main="Residuals vs Cylinder Amount", xlab="Cylinder Amount", ylab="Residuals")
abline(h = 0, col="red")
plot(autodata$acc_c, resid(lm7),  main="Residuals vs Acceleration", xlab="Acceleration", ylab="Residuals")
abline(h = 0, col="red")
plot(lm7$fitted.values, resid(lm7), main="Residuals vs Fitted Values", xlab="Fitted Values", ylab="Residuals")
abline(h = 0, col="red")
# Oooh, has kind of a horseshoe pattern, let's apply a log transformation:
lm7 <- lm(log(mpg_c) ~ wgt_c + modelyr_mvd + origin_mvd + hp_c + displ_c + cylnum_mvd + acc_c, data = autodata)
plot(lm7$fitted.values, resid(lm7), main="[Transformed] Residuals vs Fitted Values", xlab="Residuals", ylab="Fitted Values")
abline(h = 0, col="red")
# Much better! Let's check normality again:
qqnorm(resid(lm7))
qqline(resid(lm7))
# Still mostly normal, but now it has a lower left tail
##################
### STARTING OVER
### ISH
##################
full <- lm(log(mpg_c) ~ cylnum_mvd + displ_c + hp_c + wgt_c + acc_c + modelyr_mvd + origin_mvd, data=autodata)
null <- lm(log(mpg_c) ~ 1, data=autodata)
# Perform "forward" selection starting from the NULL model and set up the scope to have an upper = FULL model.
forw <- step(null, scope=list(lower=null, upper=full), direction="forward")
forw.lm <- lm(log(mpg_c) ~ wgt_c + modelyr_mvd + origin_mvd + hp_c + displ_c + cylnum_mvd, data = autodata)
summary(forw.lm)
# Multiple R-squared:  0.8819,	Adjusted R-squared:  0.8798
anova(forw.lm)
# Mean Sq: 0.014
# Backwards Selection
back <- step(full, data=autodata, direction="backward")
back.lm <- lm(log(mpg_c) ~ cylnum_mvd + displ_c + hp_c + wgt_c + modelyr_mvd + origin_mvd, data = autodata)
# Same summary as forward
summary(back.lm)
anova(back.lm)
# Stepwise Selection
stepwise<- step(null, scope = list(upper=full), data=autodata, direction="both")
stepwise.lm <- lm(log(mpg_c) ~ wgt_c + modelyr_mvd + origin_mvd + hp_c + displ_c + cylnum_mvd, data = autodata)
# Same as forward and backward
summary(stepwise.lm)
anova(stepwise.lm)
# All Possible Regressor Selection (using regsub)
regsub.exhaust<-regsubsets(log(mpg_c) ~ cylnum_mvd + displ_c + hp_c + wgt_c + acc_c + modelyr_mvd + origin_mvd, data=autodata, nbest = 1, nvmax = NULL,force.in = NULL, force.out = NULL, intercept=TRUE, method = "exhaustive")
summary.out <- summary(regsub.exhaust)
summary.out
model_info <- cbind("# Regressors"=1:8, "R-squared"=summary.out$rsq, "adj R-squared"=summary.out$adjr2, "MS_res"=summary.out$rss/(nrow(autodata) - 2:9), "CP - p"=summary.out$cp - 2:9)
model_info
# At this point, Forward, Backward, and Stepwise tell us to choose the full model minus cylnum and acc
# Right before we add cylnum and acc, CP - p goes negative, which also indicates we should choose full - (cylnum + acc) model
final_lm <- lm(log(mpg_c) ~ wgt_c + modelyr_mvd + origin_mvd + hp_c + displ_c + cylnum_mvd, data = autodata)
summary(final_lm)
anova(final_lm)
# Let's check influential points:
print(influence.measures(final_lm))
data_with_inflpnts <- influence.measures(final_lm)
inflpnts <- which(apply(data_with_inflpnts$is.inf, 1, any))
data_wo_inflpnts <- autodata[-inflpnts,]
# 368/391 = 0.9411765 which means 5.9% of our data is influential points.
final_lm_2 <- lm(log(mpg_c) ~ wgt_c + modelyr_mvd + origin_mvd + hp_c + displ_c + cylnum_mvd, data = data_wo_inflpnts)
summary(final_lm_2)
anova(final_lm_2)
# Multiple R-squared:  0.9037,	Adjusted R-squared:  0.9018,   MS_res: 0.0104
# without influential points
# VIFS:
# hp, disp, cylnum, and wgt appear to be similar (which makes sense because they should correlate)
# But, does correlation necessarily mean dependency?
lm7_vif <- vif(lm7)
lm7_vif <- as.data.frame(lm7_vif)
final_lm_vif <- vif(final_lm)
final_lm_vif <- as.data.frame(final_lm_vif)
final_lm_2_vif <- vif(final_lm_2)
final_lm_2_vif <- as.data.frame(final_lm_2_vif)
str(autodata)
setwd("/Users/jm/joshualmitchell.github.io/pokecars")
library(leaps)
library(car)
autodata <- read.table("raw_auto-mpg.text", header=TRUE)
colnames(autodata) <- c("mpg_c", "cylnum_mvd", "displ_c", "hp_c", "wgt_c", "acc_c", "modelyr_mvd", "origin_mvd", "name_str")
# Step 1: Explore and check your data
# -- Using R functions: dim, summary, hist, plot, boxplot, table (for categorical variables)
# -- to check the dimension, distribution, potential outliers for data (y, x1, x2...)
# -- consider removing incorrect or "weird" data points (but be VERY careful)
str(autodata)
summary(autodata)
anova(autodata)
# Make origin a factor (since it's not continuous)
autodata$origin_mvd <- as.factor(autodata$origin_mvd)
# Remove data points with missing horsepower values and set them to numeric columns
autodata <- subset(autodata, !autodata[ , 4] == "?")
autodata$hp_c <- as.numeric(as.character(autodata$hp_c))
str(autodata)
plot(autodata$wgt_c, resid(lm7), main="Residuals vs Weight", ylab="Residuals", xlab="Weight")
abline(h = 0, col="red")
plot(autodata$modelyr_mvd, resid(lm7),  main="Residuals vs Model Year", xlab="Model Year", ylab="Residuals")
abline(h = 0, col="red")
plot(autodata$origin_mvd, resid(lm7),  main="Residuals vs Origin", xlab="Origin", ylab="Residuals")
abline(h = 0, col="red")
plot(autodata$hp_c, resid(lm7), main="Residuals vs HP", xlab="HP", ylab="Residuals")
abline(h = 0, col="red")
plot(autodata$displ_c, resid(lm7), main="Residuals vs Displacement", xlab="Displacement", ylab="Residuals")
abline(h = 0, col="red")
plot(autodata$cylnum_mvd, resid(lm7),  main="Residuals vs Cylinder Amount", xlab="Cylinder Amount", ylab="Residuals")
abline(h = 0, col="red")
plot(autodata$acc_c, resid(lm7),  main="Residuals vs Acceleration", xlab="Acceleration", ylab="Residuals")
abline(h = 0, col="red")
lm7 <- lm(mpg_c ~ wgt_c + modelyr_mvd + origin_mvd + hp_c + displ_c + cylnum_mvd + acc_c, data = autodata)
plot(lm7$fitted.values, resid(lm7), main="Residuals vs Fitted Values", xlab="Fitted Values", ylab="Residuals")
abline(h = 0, col="red")
qqnorm(resid(lm7))
qqline(resid(lm7))
qqnorm(resid(lm7), main="Residuals vs Random Normal", xlab="Random Normal", ylab="Residuals")
qqline(resid(lm7))
lm7 <- lm(log(mpg_c) ~ wgt_c + modelyr_mvd + origin_mvd + hp_c + displ_c + cylnum_mvd + acc_c, data = autodata)
plot(lm7$fitted.values, resid(lm7), main="[Transformed] Residuals vs Fitted Values", xlab="Residuals", ylab="Fitted Values")
abline(h = 0, col="red")
qqnorm(resid(lm7))
qqline(resid(lm7))
# Still mostly normal,
qqnorm(resid(lm7), main="[Transformed] Residuals vs Random Normal", xlab="Random Normal", ylab="Residuals")
qqline(resid(lm7))
regsub.exhaust<-regsubsets(log(mpg_c) ~ cylnum_mvd + displ_c + hp_c + wgt_c + acc_c + modelyr_mvd + origin_mvd, data=autodata, nbest = 1, nvmax = NULL,force.in = NULL, force.out = NULL, intercept=TRUE, method = "exhaustive")
summary.out <- summary(regsub.exhaust)
summary.out
model_info <- cbind("# Regressors"=1:8, "R-squared"=summary.out$rsq, "adj R-squared"=summary.out$adjr2, "MS_res"=summary.out$rss/(nrow(autodata) - 2:9), "CP - p"=summary.out$cp - 2:9)
model_info
regsub.exhaust<-regsubsets(mpg_c ~ cylnum_mvd + displ_c + hp_c + wgt_c + acc_c + modelyr_mvd + origin_mvd, data=autodata, nbest = 1, nvmax = NULL,force.in = NULL, force.out = NULL, intercept=TRUE, method = "exhaustive")
summary.out <- summary(regsub.exhaust)
summary.out
model_info <- cbind("# Regressors"=1:8, "R-squared"=summary.out$rsq, "adj R-squared"=summary.out$adjr2, "MS_res"=summary.out$rss/(nrow(autodata) - 2:9), "CP - p"=summary.out$cp - 2:9)
model_info
print(influence.measures(final_lm))
data_with_inflpnts <- influence.measures(final_lm)
inflpnts <- which(apply(data_with_inflpnts$is.inf, 1, any))
inflpnts
data_wo_inflpnts <- autodata[-inflpnts,]
final_lm_2 <- lm(log(mpg_c) ~ wgt_c + modelyr_mvd + origin_mvd + hp_c + displ_c + cylnum_mvd, data = data_wo_inflpnts)
summary(final_lm_2)
anova(final_lm_2)
lm7_vif <- vif(lm7)
lm7_vif <- as.data.frame(lm7_vif)
lm7_vif
final_lm_vif <- vif(final_lm)
final_lm_vif <- as.data.frame(final_lm_vif)
final_lm_vif
final_lm_2_vif <- vif(final_lm_2)
final_lm_2_vif <- as.data.frame(final_lm_2_vif)
final_lm_2_vif
final_lm <- lm(log(mpg_c) ~ wgt_c + modelyr_mvd + origin_mvd + hp_c + displ_c, data = autodata)
summary(final_lm)
anova(final_lm)
print(influence.measures(final_lm))
data_with_inflpnts <- influence.measures(final_lm)
inflpnts <- which(apply(data_with_inflpnts$is.inf, 1, any))
data_wo_inflpnts <- autodata[-inflpnts,]
final_lm_2 <- lm(log(mpg_c) ~ wgt_c + modelyr_mvd + origin_mvd + hp_c + displ_c, data = data_wo_inflpnts)
summary(final_lm_2)
anova(final_lm_2)
final_lm <- lm(log(mpg_c) ~ wgt_c + modelyr_mvd + origin_mvd + hp_c + displ_c, data = autodata)
summary(final_lm)
anova(final_lm)
final_lm_2 <- lm(log(mpg_c) ~ wgt_c + modelyr_mvd + origin_mvd + hp_c + displ_c, data = data_wo_inflpnts)
summary(final_lm_2)
anova(final_lm_2)
lm7_vif <- vif(lm7)
lm7_vif <- as.data.frame(lm7_vif)
lm7_vif
final_lm_vif <- vif(final_lm)
final_lm_vif <- as.data.frame(final_lm_vif)
final_lm_vif
final_lm_2_vif <- vif(final_lm_2)
final_lm_2_vif <- as.data.frame(final_lm_2_vif)
final_lm_2_vif
lm7
final_lm
lm7 <- lm(mpg_c ~ wgt_c + modelyr_mvd + origin_mvd + hp_c + displ_c + cylnum_mvd + acc_c, data = autodata)
lm7_vif <- vif(lm7)
lm7_vif <- as.data.frame(lm7_vif)
lm7_vif
lm7
final_lm
